<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AppVerace</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Proyecto1_MZ_MJ.styles.css" asp-append-version="true" />
    <!-- Font Awesome para iconos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">AppVerace</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Productos" asp-action="SeleccionMultiple">
                                <i class="fas fa-cart-plus"></i> Selección múltiple
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Pedidos" asp-action="ResumenAdmin">Ver Pedidos</a>
                        </li>
                        @if (!User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Pedidos" asp-action="VerPedidoTemporal">Ver mi pedido</a>
                            </li>
                        }

                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Productos" asp-action="Index">Productos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Productos" asp-action="Menu">Menu</a>
                        </li>
                    </ul>

                    <!-- Icono de carrito con contador -->
                    <div class="ms-auto">
                        <a id="carrito-btn" class="btn btn-outline-dark" href="#" onclick="mostrarCarrito(); return false;">
                            <i class="fas fa-shopping-cart me-1"></i>
                            Carrito
                            <span id="carrito-contador" class="badge bg-dark text-white ms-1 rounded-pill">0</span>
                        </a>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Proyecto1_MZ_MJ - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <!-- Modal para visualizar el carrito -->
    <div class="modal fade" id="carrito-modal" tabindex="-1" aria-labelledby="carrito-modal-label" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="carrito-modal-label">Tu Carrito</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Producto</th>
                                <th>Precio</th>
                                <th>Cantidad</th>
                                <th>Subtotal</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="carrito-items">
                            <!-- Los items del carrito se cargarán aquí dinámicamente -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="text-end fw-bold">Total:</td>
                                <td id="carrito-total" class="fw-bold">$0.00</td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Seguir Comprando</button>
                    <form asp-controller="Pedidos" asp-action="CrearDesdeCarrito" method="post">
                        <input type="hidden" id="pedido-json" name="pedidoJson" value="" />
                        <button type="submit" class="btn btn-success">Procesar Pedido</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Scripts para el carrito -->
    <script>
        // Función global para actualizar el contador del carrito
        window.actualizarContadorCarrito = function () {
            const carrito = JSON.parse(localStorage.getItem('carrito')) || [];
            const cantidad = carrito.reduce((total, item) => total + parseInt(item.cantidad), 0);

            // Buscar el elemento con el ID carrito-contador
            const contadorElement = document.getElementById('carrito-contador');
            if (contadorElement) {
                contadorElement.textContent = cantidad;
            }
        }

        // Función para mostrar el carrito
        function mostrarCarrito() {
            const carrito = JSON.parse(localStorage.getItem('carrito')) || [];
            const tbody = document.getElementById('carrito-items');
            tbody.innerHTML = '';

            if (carrito.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5" class="text-center">Tu carrito está vacío</td></tr>';
                document.getElementById('carrito-total').textContent = '$0.00';
                document.getElementById('pedido-json').value = '';
            } else {
                let total = 0;

                carrito.forEach((item, index) => {
                    const subtotal = item.precio * item.cantidad;
                    total += subtotal;

                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                                <td>${item.nombre}</td>
                                <td>${item.precio.toFixed(2)}</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <button type="button" class="btn btn-sm btn-outline-secondary decrease-qty" data-index="${index}">-</button>
                                        <span class="mx-2">${item.cantidad}</span>
                                        <button type="button" class="btn btn-sm btn-outline-secondary increase-qty" data-index="${index}">+</button>
                                    </div>
                                </td>
                                <td>${subtotal.toFixed(2)}</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger remove-item" data-index="${index}">Eliminar</button>
                                </td>
                            `;

                    tbody.appendChild(tr);
                });

                document.getElementById('carrito-total').textContent = '$' + total.toFixed(2);
                document.getElementById('pedido-json').value = JSON.stringify(carrito);
            }

            // Mostrar el modal
            const carritoModal = new bootstrap.Modal(document.getElementById('carrito-modal'));
            carritoModal.show();

            // Configurar eventos para los botones
            configurarBotonesCarrito();
        }

        // Configurar eventos para los botones del carrito
        function configurarBotonesCarrito() {
            // Botones para disminuir cantidad
            document.querySelectorAll('.decrease-qty').forEach(btn => {
                btn.addEventListener('click', function () {
                    const index = parseInt(this.getAttribute('data-index'));
                    const carrito = JSON.parse(localStorage.getItem('carrito')) || [];

                    if (carrito[index].cantidad > 1) {
                        carrito[index].cantidad--;
                        localStorage.setItem('carrito', JSON.stringify(carrito));
                        actualizarContadorCarrito();
                        mostrarCarrito();
                    }
                });
            });

            // Botones para aumentar cantidad
            document.querySelectorAll('.increase-qty').forEach(btn => {
                btn.addEventListener('click', function () {
                    const index = parseInt(this.getAttribute('data-index'));
                    const carrito = JSON.parse(localStorage.getItem('carrito')) || [];

                    carrito[index].cantidad++;
                    localStorage.setItem('carrito', JSON.stringify(carrito));
                    actualizarContadorCarrito();
                    mostrarCarrito();
                });
            });

            // Botones para eliminar item
            document.querySelectorAll('.remove-item').forEach(btn => {
                btn.addEventListener('click', function () {
                    const index = parseInt(this.getAttribute('data-index'));
                    const carrito = JSON.parse(localStorage.getItem('carrito')) || [];

                    carrito.splice(index, 1);
                    localStorage.setItem('carrito', JSON.stringify(carrito));
                    actualizarContadorCarrito();
                    mostrarCarrito();
                });
            });
        }

        // Inicializar contador al cargar la página
        document.addEventListener('DOMContentLoaded', function () {
            actualizarContadorCarrito();

            // Si hay un mensaje para limpiar el carrito (después de procesar un pedido)
            if (@(TempData["LimpiarCarrito"] != null ? "true" : "false")) {
                localStorage.removeItem('carrito');
                actualizarContadorCarrito();
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>